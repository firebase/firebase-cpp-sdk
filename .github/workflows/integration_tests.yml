name: Integration tests

on:
  workflow_dispatch:
    inputs:
      use_expanded_matrix:
        description: 'Set to 1 to test across all platforms, apis and operating system configurations.'
        default: '0'
        required: true
      platforms:
        description: 'CSV of Desktop, Android and/or iOS'
        default: 'Desktop,Android,iOS'
        required: true
      apis:
        description: 'CSV of apis to build and test'
        default: 'admob,analytics,auth,database,dynamic_links,firestore,functions,installations,instance_id,messaging,remote_config,storage'
        required: true
      operating_systems:
        description: 'CSV of VMs to run on'
        default: 'ubuntu-latest,windows-latest,macos-latest'
        required: true
      desktop_ssl_variants:
        description: 'CSV of desktop SSL variants to use'
        default: 'openssl,boringssl'
        required: true
      android_device:
        description: 'Android device model'
        default: 'flame'
      android_api:
        description: 'Android API level'
        default: '29'
      ios_device:
        description: 'iOS device model'
        default: 'iphone8'
      ios_version:
        description: 'iOS device version'
        default: '11.4'

jobs:
  # To feed input into the job matrix, we first need to convert to a JSON
  # list. Then we can use fromJson to define the field in the matrix for the tests job.
  prepare_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix_os: ${{ steps.set-matrix-os.outputs.matrix_os }}
      matrix_platform: ${{ steps.set-matrix-os.outputs.matrix_platform }}
      matrix_ssl: ${{ steps.set-matrix-os.outputs.matrix_ssl }}
    steps:
      # Normalize disparity of cron worfklow defaults and workflow_dispatch
      # variable configurations.
      - name: "Configure workflow matrix"
        env:
          EXPANDED_MATRIX_PLATFORMS: 'Desktop,Android,iOS'
          EXPANDED_MATRIX_APIS: 'admob,analytics,auth,database,dynamic_links,firestore,functions,installations,instance_id,messaging,remote_config,storage'
          EXPANDED_MATRIX_OPERATING_SYSTEMS: 'ubuntu-latest,windows-latest,macos-latest'
          EXPANDED_MATRIX_DESKTOP_SSL_VARIANTS: 'openssl,boringssl'
          EXPANDED_MATRIX_ANDROID_DEVICE: 'flame'
          EXPANDED_MATRIX_ANDROID_API: '29'
          EXPANDED_MATRIX_IOS_DEVICE: 'iphone8'
          EXPANDED_MATRIX_IOS_VERSION: '11.4'
        run: |
          set
      
      # If the workflow dispatch was triggered without expanded matrix mode.
      - name: Configure Workflow Dispatch Parameters
        if: github.event.inputs.use_expanded_matrix == '0'
        run: |
          echo "DDB_CONFIG=NORMAL}" >> $GITHUB_ENV    
          echo "PLATFORMS=${{github.event.inputs.platforms}}" >> $GITHUB_ENV
          echo "APIS=${{github.event.inputs.apis}}" >> $GITHUB_ENV
          echo "OPERATING_SYSTEMS=${{github.event.inputs.operating_systems}}" >> $GITHUB_ENV
          echo "DESKTOP_SSL_VARIANTS=${{github.event.inputs.desktop_ssl_variants}}" >> $GITHUB_ENV
          echo "ANDROID_DEVICE=${{github.event.inputs.android_device}}" >> $GITHUB_ENV
          echo "ANDROID_API=${{github.event.inputs.android_api}}" >> $GITHUB_ENV
          echo "IOS_DEVICE=${{github.event.inputs.ios_device}}" >> $GITHUB_ENV
          echo "IOS_VERSION=${{github.event.inputs.ios_version}}" >> $GITHUB_ENV
        
      # If a cron job or if workflow dispatch was triggered with expanded
      # matrix mode.
      - name: Configure Expanded Matrix Parameters
        if: github.event.inputs.expanded_matrix == ''
        run: |
          echo "DDB_CONFIG=XPAND}" >> $GITHUB_ENV    
          echo "PLATFORMS=${{env.EXPANDED_MATRIX_PLATFORMS}}" >> $GITHUB_ENV
          echo "APIS=${{env.EXPANDED_MATRIX_APIS}}" >> $GITHUB_ENV
          echo "OPERATING_SYSTEMS=${{env.EXPANDED_MATRIX_OPERATING_SYSTEMS}}" >> $GITHUB_ENV
          echo "DESKTOP_SSL_VARIANTS=${{env.EXPANDED_MATRIX_DESKTOP_SSL_VARIANTS}}" >> $GITHUB_ENV
          echo "ANDROID_DEVICE=${{env.EXPANDED_MATRIX_ANDROID_DEVICE}}" >> $GITHUB_ENV
          echo "ANDROID_API=${{env.EXPANDED_MATRIX_ANDROID_API}}" >> $GITHUB_ENV
          echo "IOS_DEVICE=${{env.EXPANDED_MATRIX_IOS_DEVICE}}" >> $GITHUB_ENV
          echo "IOS_VERSION=${{env.EXPANDED_MATRIX_IOS_VERSION}}" >> $GITHUB_ENV    
      
      - name: Log Matrix
        run: |
          echo ${{env.PLATFORMS}}
          echo ${{env.APIS}}
          echo ${{env.OPERATING_SYSTEMS}}
          echo ${{env.DESKTOP_SSL_VARIANTS}}
          echo ${{env.ANDROID_DEVICE}}
          echo ${{env.ANDROID_API}}
          echo ${{env.IOS_DEVICE}}
          echo ${{env.IOS_VERSION}}

      - id: set-matrix-os
        # e.g. 'ubuntu-latest,macos-latest' -> '["ubuntu-latest","macos-latest"]'
        run: |
          OS_JSON=[\"$(echo ${{ github.event.inputs.operating_systems }} | sed 's/,/","/g')\"]
          echo "::set-output name=matrix_os::${OS_JSON}"
          PLATFORM_JSON=[\"$(echo ${{ github.event.inputs.platforms }} | sed 's/,/","/g')\"]
          echo "::set-output name=matrix_platform::${PLATFORM_JSON}"
          SSL_JSON=[\"$(echo ${{ github.event.inputs.desktop_ssl_variants }} | sed 's/,/","/g')\"]
          echo "::set-output name=matrix_ssl::${SSL_JSON}"

  
