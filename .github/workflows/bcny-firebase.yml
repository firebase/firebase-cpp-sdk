name: firebase

on:
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: 'amd64'
            platform: 'x64'
          - arch: 'arm64'
            platform: 'ARM64'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: ${{ github.workspace }}/SourceCache/flatbuffers
          ref: 99aa1ef21dd9dc3f9d4fb0eb82f4b59d0bb5e4c5
          repository: google/flatbuffers

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: ${{ github.workspace }}/SourceCache/firebase-cpp-sdk
          ref: refs/heads/compnerd/swift
          repository: thebrowsercompany/firebase-cpp-sdk

      - uses: compnerd/gha-setup-vsdevenv@main
        with:
          host_arch: amd64
          components: 'Microsoft.VisualStudio.Component.VC.Tools.x86.x64;Microsoft.VisualStudio.Component.VC.Tools.ARM64'
          arch: ${{ matrix.arch }}

      - uses: actions/setup-python@v4
        id: python
        with:
          python-version: 3.9
          architecture: 'x64'

      - name: Install absl-py
        run: pip install absl-py

      - name: Configure flatbuffers
        run:
          cmake -B ${{ github.workspace }}/BinaryCache/flatbuffers `
                -D CMAKE_BUILD_TYPE=Release `
                -G "Visual Studio 17 2022" `
                -A x64 `
                -S ${{ github.workspace }}/SourceCache/flatbuffers
      - name: Build flatc
        run: cmake --build ${{ github.workspace }}/BinaryCache/flatbuffers --config Release --target flatc

      - name: Configure firebase
        run:
          cmake -B ${{ github.workspace }}/BinaryCache/firebase `
                -D BUILD_SHARED_LIBS=NO `
                -D CMAKE_INSTALL_PREFIX=${{ github.workspace }}/BuildRoot/Library/firebase/usr `
                -G "Visual Studio 17 2022" `
                -A ${{ matrix.platform }} `
                -S ${{ github.workspace }}/SourceCache/firebase-cpp-sdk `
                -D FLATBUFFERS_BUILD_FLATC=NO `
                -D FIREBASE_CPP_BUILD_PACKAGE=YES `
                -D FIREBASE_GITHUB_ACTION_BUILD=YES `
                -D FIREBASE_INCLUDE_LIBRARY_DEFAULT=OFF `
                -D FIREBASE_INCLUDE_AUTH=YES `
                -D FIREBASE_INCLUDE_FIRESTORE=YES `
                -D FIREBASE_USE_BORINGSSL=YES `
                -D MSVC_RUNTIME_LIBRARY_STATIC=NO `
                -D CMAKE_MSVC_DEBUG_INFORMATION_FORMAT=Embedded `
                -D FIREBASE_PYTHON_HOST_EXECUTABLE:FILEPATH=${{ steps.python.outputs.python-path }} `
                -D FLATBUFFERS_FLATC_EXECUTABLE=${{ github.workspace }}/BinaryCache/flatbuffers/Release/flatc.exe
      - name: Build firebase
        run: cmake --build ${{ github.workspace }}/BinaryCache/firebase --config RelWithDebInfo
      - name: Install firebase
        run: cmake --build ${{ github.workspace }}/BinaryCache/firebase --config RelWithDebInfo --target install
      - name: Install firebase (manual)
        run: |
          Copy-Item "${{ github.workspace }}/BinaryCache/firebase/external/src/firestore/Firestore/core/include/firebase/firestore/firestore_errors.h" "${{ github.workspace }}/BuildRoot/Library/firebase/usr/include/firebase/firestore/firestore_errors.h"
          Copy-Item "${{ github.workspace }}/BinaryCache/firebase/external/src/firestore/Firestore/core/include/firebase/firestore/geo_point.h" "${{ github.workspace }}/BuildRoot/Library/firebase/usr/include/firebase/firestore/geo_point.h"
          Copy-Item "${{ github.workspace }}/BinaryCache/firebase/external/src/firestore/Firestore/core/include/firebase/firestore/timestamp.h" "${{ github.workspace }}/BuildRoot/Library/firebase/usr/include/firebase/firestore/timestamp.h"

          Write-Host "Copying static libraries ..."
          $source = "${{ github.workspace }}/BinaryCache/firebase"
          $libraries = Get-ChildItem -Path $source -File -Recurse -Filter *.lib
          foreach ($library in $libraries) {
            $destination = Join-Path -Path "${{ github.workspace }}/BuildRoot/Library/firebase/usr/libs/windows" -ChildPath $library.Name
            Copy-Item -Path $library.FullName -Destination $destination -Force
            Write-Host "... copied ${destination}"
          }

          $pdbs = Get-ChildItem -Path $source -File -Recurse -Filter *.pdb
          foreach ($pdb in $pdbs) {
            $destination = Join-Path -Path "${{ github.workspace }}/BuildRoot/Library/firebase/usr/libs/windows" -ChildPath $pdb.Name
            Copy-Item -Path $pdb.FullName -Destination $destination -Force
            Write-Host "... copied ${destination}"
          }
      - uses: actions/upload-artifact@v3
        with:
          name: firebase-windows-${{ matrix.arch }}
          path: ${{ github.workspace }}/BuildRoot/Library/firebase
