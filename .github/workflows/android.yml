name: Android Builds

on:
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:
    inputs:
      expanded_matrix:
        description: 'Use an expanded test matrix?'
        default: '0'
        required: true

env:
  CCACHE_DIR: ${{ github.workspace }}/ccache_dir

jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    env:
      MATRIX_OS: 'ubuntu-latest,macos-latest'
      MATRIX_ARCHITECTURE:  'x64'
      EXPANDED_MATRIX_OS: 'ubuntu-latest,macos-latest'
      EXPANDED_MATRIX_ARCHITECTURE: 'x64'
    outputs:
      matrix_os: ${{ steps.export-result.outputs.matrix_os }}
      matrix_architecture: ${{ steps.export-result.outputs.matrix_architecture }}
    steps:
      - name: Use expanded matrix
        if: github.event.inputs.expanded_matrix == '1'
        run: |
          echo "MATRIX_OS=${EXPANDED_MATRIX_OS}" >> $GITHUB_ENV
          echo "MATRIX_ARCHITECTURE=${EXPANDED_MATRIX_ARCHITECTURE}" >> $GITHUB_ENV
      - id: export-result
        run: |
          OS_JSON=[\"$(echo ${{ env.MATRIX_OS }} | sed 's/,/","/g')\"]
          echo "::set-output name=matrix_os::${OS_JSON}"
          ARCHITECTURE_JSON=[\"$(echo ${{ env.MATRIX_ARCHITECTURE }} | sed 's/,/","/g')\"]
          echo "::set-output name=matrix_architecture::${ARCHITECTURE_JSON}"

  build:
    name: android-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.architecture }}-${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    needs: prepare_matrix
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.prepare_matrix.outputs.matrix_os) }}
        architecture: ${{ fromJson(needs.prepare_matrix.outputs.matrix_architecture) }}
    steps:
      - name: Check expanded matrix config
        if: github.event.inputs.expanded_matrix == '1'
        run: |
          echo "Enabling expanded build and test matrix."
          echo "USE_EXPANDED_MATRIX=1" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set env variables for subsequent steps (all)
        shell: bash
        run: |
          echo "MATRIX_UNIQUE_NAME=${{ matrix.os }}-${{ matrix.architecture }}" >> $GITHUB_ENV
          echo "GHA_INSTALL_CCACHE=1" >> $GITHUB_ENV

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: ${{ matrix.architecture }}

      - name: Add msbuild to PATH
        if: startsWith(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install prerequisites
        shell: bash
        run: |
          build_scripts/android/install_prereqs.sh

      - name: Cache ccache files
        id: cache_ccache
        uses: actions/cache@v2
        with:
          path: ccache_dir
          key: dev-test-ccache-${{ env.MATRIX_UNIQUE_NAME }}

      - name: Build SDK
        shell: bash
        run: |
          build_scripts/android/build.sh android_build .

      - name: Stats for ccache (mac and linux)
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
        run: ccache -s

      - name: Print built libraries
        shell: bash
        run: |
          find android_build -name "*.aar"
          find android_build -name "*.jar"
